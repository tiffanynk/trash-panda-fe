[{"/Users/goldenolive/Desktop/Projects/shehacks/trash-panda-fe/src/index.js":"1","/Users/goldenolive/Desktop/Projects/shehacks/trash-panda-fe/src/components/Map.js":"2","/Users/goldenolive/Desktop/Projects/shehacks/trash-panda-fe/src/components/MapSearch.js":"3","/Users/goldenolive/Desktop/Projects/shehacks/trash-panda-fe/src/App.js":"4","/Users/goldenolive/Desktop/Projects/shehacks/trash-panda-fe/src/components/BottomNavBar.js":"5"},{"size":500,"mtime":1610230159210,"results":"6","hashOfConfig":"7"},{"size":3261,"mtime":1610230159208,"results":"8","hashOfConfig":"7"},{"size":1045,"mtime":1610230159209,"results":"9","hashOfConfig":"7"},{"size":620,"mtime":1610233985885,"results":"10","hashOfConfig":"7"},{"size":1740,"mtime":1610237934555,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1ap5biu",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/goldenolive/Desktop/Projects/shehacks/trash-panda-fe/src/index.js",[],["24","25"],"/Users/goldenolive/Desktop/Projects/shehacks/trash-panda-fe/src/components/Map.js",["26","27"],"import { useState, useEffect } from 'react';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport env from 'react-dotenv';\nimport trashPandaIcon from '../assets/trash-panda-icon.svg';\n\nexport function MapContainer(props) {\n    const { google, location } = props;\n    const [selectedPlace, setSelectedPlace] = useState({});\n    const [activeMarker, setActiveMarker] = useState({});\n    const [showingInfoWindow, setShowingInfoWindow] = useState(false);\n    // const [currentLocation, setCurrentLocation] = useState({\n    //     lat: 37.774929,\n    //     lng: -122.419416\n    // });\n    const [markers, setMarkers] = useState([\n        { id: 1, name: 'Point1', position: { lat: 37.762391, lng: -122.439192 } },\n        { id: 2, name: 'Point2', position: { lat: 37.759703, lng: -122.428093 } },\n    ]);\n\n    const onMarkerClick = (props, marker, event) => {\n        setSelectedPlace(props);\n        setActiveMarker(marker);\n        setShowingInfoWindow(true);\n    };\n\n    const onInfoWindowClose = () => {\n        setShowingInfoWindow(false);\n    };\n\n    const renderMarkers = () => {\n        return markers.map((marker) => (\n            <Marker\n                key={marker.id}\n                onClick={onMarkerClick}\n                name={marker.name}\n                position={marker.position}\n                icon={{\n                    url: trashPandaIcon,\n                    anchor: new google.maps.Point(24, 24),\n                    scaledSize: new google.maps.Size(48, 48),\n                }}\n            />\n        ));\n    };\n\n    // const loadMap = () => {\n    //     const { lat, lng } = currentLocation\n    //     const center = new props.google.maps.LatLng(lat, lng);\n    //     const mapConfig = Object.assign({}, {\n    //         center: center,\n    //         zoom: 14\n    //     })\n\n    //     if (props && props.google) {\n    //         const map = new props.google.maps.Map(props.mapRef, mapConfig);\n\n    //         map.addListener('dragend', (evt) => {\n    //             props.onMove(map);\n    //         })\n    //     }\n    // }\n\n    // useEffect(() => {\n    //     console.log(navigator.geolocation)\n    //     if (props.centerAroundCurrentLocation) {\n    //         if (navigator && navigator.geolocation) {\n    //             navigator.geolocation.getCurrentPosition((pos) => {\n    //                 const coords = pos.coords;\n    //                 setCurrentLocation({\n    //                     lat: coords.latitude,\n    //                     lng: coords.longitude\n    //                 })\n    //             })\n    //         }\n    //     }\n    //     loadMap();\n    // }, [])\n\n    return (\n        <Map google={google} center={location} containerStyle={containerStyle} zoom={16}>\n            {renderMarkers()}\n            <InfoWindow\n                marker={activeMarker}\n                visible={showingInfoWindow}\n                onClose={onInfoWindowClose}\n            >\n                <div>\n                    <h1>{selectedPlace.name}</h1>\n                </div>\n            </InfoWindow>\n        </Map>\n    );\n}\n\nconst containerStyle = {\n    position: 'absolute',\n    width: '100%',\n    height: '75%',\n};\n\nexport default GoogleApiWrapper({\n    apiKey: env.GOOGLE_API_KEY,\n})(MapContainer);\n","/Users/goldenolive/Desktop/Projects/shehacks/trash-panda-fe/src/components/MapSearch.js",[],"/Users/goldenolive/Desktop/Projects/shehacks/trash-panda-fe/src/App.js",[],"/Users/goldenolive/Desktop/Projects/shehacks/trash-panda-fe/src/components/BottomNavBar.js",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":1,"column":20,"nodeType":"34","messageId":"35","endLine":1,"endColumn":29},{"ruleId":"32","severity":1,"message":"36","line":15,"column":21,"nodeType":"34","messageId":"35","endLine":15,"endColumn":31},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setMarkers' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]